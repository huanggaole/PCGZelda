{
  "code": "import BulletFactory from \"../map/BulletFactory\";\r\nexport var CharacterAction;\r\n(function (CharacterAction) {\r\n    CharacterAction[CharacterAction[\"None\"] = 0] = \"None\";\r\n    CharacterAction[CharacterAction[\"Walk\"] = 1] = \"Walk\";\r\n    CharacterAction[CharacterAction[\"RandomWalk\"] = 2] = \"RandomWalk\";\r\n    CharacterAction[CharacterAction[\"Attack\"] = 3] = \"Attack\";\r\n})(CharacterAction || (CharacterAction = {}));\r\nexport default class Character extends Laya.Script {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.action = CharacterAction.None;\r\n        this.hurtFrame = 0;\r\n        this.invincibleStatus = false;\r\n    }\r\n    setDirection(_x, _y) {\r\n        this.x = _x;\r\n        this.y = _y;\r\n    }\r\n    onStart() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.speed = 3.0;\r\n        this.frame = 0;\r\n        this.stepindex = 0;\r\n        this.directindex = 0;\r\n        this.rigidbody = this.owner.getComponent(Laya.RigidBody);\r\n    }\r\n    doTurnAround() {\r\n        if (Math.abs(this.dirx) > Math.abs(this.diry)) {\r\n            if (this.dirx > 0) {\r\n                this.directindex = 3;\r\n            }\r\n            else {\r\n                this.directindex = 2;\r\n            }\r\n        }\r\n        else {\r\n            if (this.diry > 0) {\r\n                this.directindex = 0;\r\n            }\r\n            else {\r\n                this.directindex = 1;\r\n            }\r\n        }\r\n        this.owner.value = Character.Values[0][this.directindex];\r\n    }\r\n    doMove() {\r\n        if (!this.rigidbody) {\r\n            return;\r\n        }\r\n        this.rigidbody.setVelocity({ x: this.x * this.speed, y: this.y * this.speed });\r\n        if (this.x == 0 && this.y == 0) {\r\n            return;\r\n        }\r\n        this.dirx = this.x;\r\n        this.diry = this.y;\r\n        this.frame++;\r\n        if (this.frame * this.speed >= 50) {\r\n            this.frame = 0;\r\n            this.stepindex++;\r\n            if (this.stepindex >= 4) {\r\n                this.stepindex = 0;\r\n            }\r\n        }\r\n        if (Math.abs(this.x) > Math.abs(this.y)) {\r\n            if (this.x > 0) {\r\n                this.directindex = 3;\r\n            }\r\n            else {\r\n                this.directindex = 2;\r\n            }\r\n        }\r\n        else {\r\n            if (this.y > 0) {\r\n                this.directindex = 0;\r\n            }\r\n            else {\r\n                this.directindex = 1;\r\n            }\r\n        }\r\n        this.owner.value = Character.Values[this.stepindex][this.directindex];\r\n    }\r\n    onStopMove() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n    }\r\n    onSetRandomWalk() {\r\n        this.x = 0.5 - Math.random();\r\n        this.y = 0.5 - Math.random();\r\n        let mod = Math.sqrt(this.x * this.x + this.y * this.y);\r\n        if (mod != 0) {\r\n            this.x /= mod;\r\n            this.y /= mod;\r\n        }\r\n    }\r\n    addExp() {\r\n        console.log(\"AddExp\");\r\n    }\r\n    onUpdate() {\r\n        if (this.HP <= 0 && this.hurtFrame == 0) {\r\n            this.addExp();\r\n            this.owner.x = -100;\r\n            this.owner.y = -100;\r\n            this.removeOwner(this.owner);\r\n        }\r\n        if (this.hurtFrame > 0) {\r\n            const ColorFilter = Laya.ColorFilter;\r\n            let redMat;\r\n            if (this.HP > 0) {\r\n                redMat = [\r\n                    1, 0, 0, 0, 0,\r\n                    0, 1 - this.hurtFrame / 40, 0, 0, 0,\r\n                    0, 0, 1 - this.hurtFrame / 40, 0, 0,\r\n                    0, 0, 0, 1, 0\r\n                ];\r\n            }\r\n            else {\r\n                redMat = [\r\n                    1, 0, 0, 0, 0,\r\n                    0, 0, 0, 0, 0,\r\n                    0, 0, 0, 0, 0,\r\n                    0, 0, 0, this.hurtFrame / 40, 0\r\n                ];\r\n            }\r\n            let redFilter = new ColorFilter(redMat);\r\n            this.owner.filters = [redFilter];\r\n            this.hurtFrame--;\r\n            this.invincibleStatus = true;\r\n            let hpbar = this.owner.getChildByName(\"hpbar\");\r\n            if (hpbar) {\r\n                hpbar.graphics.drawRect(0, 0, 16, 4, \"#000000\");\r\n                hpbar.graphics.drawRect(1, 1, 14 * this.HP / this.maxHP, 2, \"#ff0000\");\r\n            }\r\n        }\r\n        else {\r\n            this.owner.filters = [];\r\n            this.invincibleStatus = false;\r\n        }\r\n    }\r\n    removeOwner(owner) {\r\n        let rg = owner.getComponent(Laya.RigidBody);\r\n        let bc = owner.getComponent(Laya.BoxCollider);\r\n        if (rg) {\r\n            rg.enabled = false;\r\n        }\r\n        if (bc) {\r\n            bc.enabled = false;\r\n        }\r\n        if (bc) {\r\n            owner._destroyComponent(bc);\r\n        }\r\n        if (rg) {\r\n            owner._destroyComponent(rg);\r\n        }\r\n        Laya.Pool.recover('EnemyType', owner);\r\n        BulletFactory.mainsp.removeChild(owner);\r\n    }\r\n}\r\nCharacter.Values = [[\"一\", \"八\", \"匕\", \"厂\"], [\"刀\", \"儿\", \"二\", \"几\"], [\"力\", \"人\", \"入\", \"十\"], [\"又\", \"川\", \"寸\", \"大\"], [\"飞\", \"干\", \"工\", \"弓\"], [\"广\", \"己\", \"口\", \"马\"], [\"门\", \"女\", \"山\", \"尸\"]];\r\n",
  "references": [
    "/Users/huanggaole/PCGZelda/src/scene/BattleScene.ts",
    "/Users/huanggaole/PCGZelda/src/map/BulletFactory.ts",
    "/Users/huanggaole/PCGZelda/src/map/EnemyFactory.ts",
    "/Users/huanggaole/PCGZelda/src/character/Player.ts"
  ]
}
