{
  "code": "import Character, { CharacterAction } from \"./Character\";\r\nimport EnemyFactory from \"../map/EnemyFactory\";\r\nexport default class Player extends Character {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.attacktick = 0;\r\n        this.attackInterval = 20;\r\n        this.attackPre = 2;\r\n        this.attackAft = 5;\r\n    }\r\n    onUpdate() {\r\n        if (this.x == 0 && this.y == 0 && EnemyFactory.enemylist.length > 0) {\r\n            this.attacktick++;\r\n            if (this.action != CharacterAction.Attack) {\r\n                this.action = CharacterAction.Attack;\r\n                this.attacktick = 0;\r\n            }\r\n            if (this.attacktick < this.attackInterval) {\r\n                this.onAttackWait();\r\n            }\r\n            else if (this.attacktick < this.attackInterval + this.attackPre) {\r\n                this.onAttackPre();\r\n            }\r\n            else if (this.attacktick == this.attackInterval + this.attackPre) {\r\n                this.onAttackAft();\r\n            }\r\n            else if (this.attacktick < this.attackInterval + this.attackPre + this.attackAft) {\r\n                this.onAttackAft();\r\n            }\r\n            else {\r\n                this.attacktick = 0;\r\n            }\r\n        }\r\n        else {\r\n            this.action = CharacterAction.Walk;\r\n        }\r\n        this.doMove();\r\n    }\r\n    onAttackWait() {\r\n        let index = -1;\r\n        let enemyx = -1;\r\n        let enemyy = -1;\r\n        let mindist = 999999;\r\n        let owner = this.owner;\r\n        for (let i = 0; i < EnemyFactory.enemylist.length; i++) {\r\n            let enemy = EnemyFactory.enemylist[i];\r\n            let enemyHP = EnemyFactory.enemylist[i].getComponent(Character).HP;\r\n            if (enemyHP > 0) {\r\n                let delx = enemy.x - owner.x;\r\n                let dely = enemy.y - owner.y;\r\n                let newdist = Math.sqrt(delx * delx + dely * dely);\r\n                if (newdist < mindist) {\r\n                    index = i;\r\n                    enemyx = enemy.x;\r\n                    enemyy = enemy.y;\r\n                    mindist = newdist;\r\n                }\r\n            }\r\n        }\r\n        let dirx = enemyx - owner.x;\r\n        let diry = enemyy - owner.y;\r\n        this.dirx = dirx;\r\n        this.diry = diry;\r\n        this.doTurnAround();\r\n    }\r\n    onAttackPre() {\r\n        this.owner.value = Character.Values[4][this.directindex];\r\n    }\r\n    onAttackAft() {\r\n        this.owner.value = Character.Values[5][this.directindex];\r\n    }\r\n}\r\n",
  "references": [
    "/Users/huanggaole/PCGZelda/src/character/Character.ts",
    "/Users/huanggaole/PCGZelda/src/map/EnemyFactory.ts"
  ]
}
